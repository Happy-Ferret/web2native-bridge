<project name="Web2Native Bridge - Web Payment Support" default="help" basedir=".">

  <!-- set properties for this build -->
  <property name="src_dir" value="src"/>
  <property name="common_dir" value="../webpayment.client/common"/>
  
  <property name="cardimage_dir" location="card-images"/>
  <property name="class_war_path" value="WEB-INF/classes/org/webpki/webapps/wcpppaymentdemo"/>

  <property name="temp_dir" location=".tmp"/>
  <property name="credentials" location="credentials/sks.serialized"/>
  
  <property name="keypassword" value="foo123"/>
  <property name="keyfilext" value=".p12"/>
  <property name="key_dir" location="keys"/>

  <property name="bankkey" value="mybank-eecert"/>
  <property name="paymentroot" value="payment-network-rootca"/>

  <property name="merchantkey" value="demomerchant-eecert"/>
  <property name="merchantroot" value="merchant-network-rootca"/>
  
  <property name="encryptionkey_rsa" value="mybank-encryption-key-rsa"/>
  <property name="encryptionkey_ec" value="mybank-encryption-key-ec"/>
  <property name="clientroot" value="mybank-clientroot"/>
  <property name="clientkey_rsa" value="mybank-client-key-rsa"/>
  <property name="clientkey_ec" value="mybank-client-key-ec"/>
  <property name="clientkey_ec2" value="mybank-client-key-ec2"/>
  <property name="clientkey_ec_other" value="mybank-client-key-ec-other"/>

  <condition property="bank.host" value="https://localhost:8442" else="https://mobilepki.org">
    <isset property="localhost"/>
  </condition>
  
  <property name="lib_dir" value="../proxy/install/libs"/>
  
  <condition property="storetype" value="PKCS12" else="JKS">
    <matches pattern=".*\.p12$" string="${keyfilext}"/>
  </condition>
  
  <property name="javaversion" value="1.7" />
  <property name="debug" value="on"/>
  
  <property environment="env"/>
  <property name="catalina.home" value="${env.CATALINA_HOME}"/>

  <path id="compile.classpath">
     <fileset dir="${lib_dir}">
       <include name="*.jar"/>
    </fileset>
  </path>
  
  <target name="help">
      <echo message="createcerts initwallet [-Dlocalhost=0]"/>
  </target>
 
  <target name="_import">
    <java fork="yes"
          classname="org.webpki.w2nb.webpayment.resources.InitWallet"
          dir="${key_dir}"
          failonerror="true">
        <classpath>
             <fileset dir="${lib_dir}">
                <include name="*.jar"/>
             </fileset>
             <pathelement location="${temp_dir}"/>
        </classpath>
        <arg value="${credentials}"/>
        <arg value="${sks.certificate}${keyfilext}"/>
        <arg value="${keypassword}"/>
        <arg value="${sks.pin}"/>
        <arg value="${card.type}"/>
        <arg value="${card.number}"/>
        <arg value="${bank.host}/w2nb-bank/transreq"/>
        <arg value="${cardimage_dir}/${sks.image}"/>
      </java>
  </target>
<!-- sksFile certFile certFilePassword cardPin cardType cardNumber [image]   -->  
  <target name="initwallet">
    <delete file="${credentials}"/>
    <delete dir="${temp_dir}"/>
    <mkdir dir="${temp_dir}"/>
    <javac debug="${debug}"
           source="${javaversion}"
           target="${javaversion}"
           srcdir="${src_dir}:${common_dir}"
           destdir="${temp_dir}" 
           classpathref="compile.classpath"
           includeAntRuntime="false">
    </javac>

    <antcall target="_import">
       <param name="sks.certificate" value="${clientkey_ec}"/>
       <param name="sks.pin" value="1234"/>
       <param name="card.type" value="SuperCard"/>
       <param name="card.number" value="6875 0567 4555 2109"/>
       <param name="sks.image" value="supercard.png"/>
    </antcall>
    <antcall target="_import">
       <param name="sks.certificate" value="${clientkey_rsa}"/>
       <param name="sks.pin" value="1234"/>
       <param name="card.type" value="CoolCard"/>
       <param name="card.number" value="8645 7800 2394 0312"/>
       <param name="sks.image" value="coolcard.png"/>
     </antcall>
     <antcall target="_import">
       <param name="sks.certificate" value="${clientkey_ec_other}"/>
       <param name="sks.pin" value="1234"/>
       <param name="card.type" value="@"/>
       <param name="card.number" value="8888 0000 3333 4444"/>
       <param name="sks.image" value="unusualcard.png"/>
     </antcall>
     <antcall target="_import">
       <param name="sks.certificate" value="${clientkey_ec2}"/>
       <param name="sks.pin" value="1234"/>
       <param name="card.type" value="UnsualCard"/>
       <param name="card.number" value="1111 2222 3333 4444"/>
       <param name="sks.image" value="unusualcard.png"/>
     </antcall>
     
  </target>

  <target name="_createcert">
  	<java fork="yes"
  		  classname="org.webpki.ca.CommandLineCA"
  		  dir="${key_dir}"
		  failonerror="true">
  		<classpath>
  			 <fileset dir="${lib_dir}">
  		        <include name="*.jar"/>
  			 </fileset>
  		</classpath>
  	    <arg line="${cmd} -out/keyalias mykey"/>
  	</java>
  </target>

  <target name="_getroot">
	<exec executable="keytool" failonerror="true" dir="${key_dir}">
	  <arg line="-exportcert -keystore ${rootfile}${keyfilext} -alias mykey -storepass ${keypassword} -storetype ${storetype} -file ${rootfile}.cer"/>
	</exec>
  </target>
  
  <target name="_certpaymentnetwork">
    <antcall target="_createcert">
       <param name="cmd" value="-selfsigned -entity/ca -subject &quot;CN=Payment Network Root CA1, C=US&quot; -validity/start 2010-07-10T10:00:00 -validity/end 2030-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${paymentroot}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 4096 -sigalg RSA_SHA512 -serial 1"/>
    </antcall>
    <antcall target="_getroot">
       <param name="rootfile" value="${paymentroot}"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value="-ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore payment-network-rootca${keyfilext} -entity/ca -subject &quot;CN=Payment Network Sub CA3, C=EU&quot; -validity/start 2012-07-10T10:00:00 -validity/end 2025-07-10T09:59:59 -out/storetype ${storetype} -out/keystore temp-subca${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -ecccurve NIST_P_256 -sigalg RSA_SHA512 -serial 3"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value=" -ca/addpath all -ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore temp-subca${keyfilext} -entity/ee -subject &quot;CN=mybank.com, serialNumber=4501, C=FR&quot; -validity/start 2014-01-01T00:00:00 -validity/end 2020-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${bankkey}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -ecccurve NIST_P_256 -sigalg ECDSA_SHA256"/>
    </antcall>
  </target>

 <target name="_certmerchants">
    <antcall target="_createcert">
       <param name="cmd" value="-selfsigned -entity/ca -subject &quot;CN=Merchant Network Root CA1, C=US&quot; -validity/start 2010-07-10T10:00:00 -validity/end 2030-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${merchantroot}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 4096 -sigalg RSA_SHA512 -serial 1"/>
    </antcall>
    <antcall target="_getroot">
       <param name="rootfile" value="${merchantroot}"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value="-ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore ${merchantroot}${keyfilext} -entity/ca -subject &quot;CN=Merchant Network Sub CA5, C=DE&quot; -validity/start 2012-07-10T10:00:00 -validity/end 2025-07-10T09:59:59 -out/storetype ${storetype} -out/keystore temp-subca${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 2048 -sigalg RSA_SHA512 -serial 5"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value=" -ca/addpath all -ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore temp-subca${keyfilext} -entity/ee -subject &quot;CN=Demo Merchant, serialNumber=896325, C=DE&quot; -validity/start 2014-01-01T00:00:00 -validity/end 2020-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${merchantkey}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword}  -sigalg RSA_SHA256 -keysize 2048"/>
    </antcall>
  </target>

  <target name="_clientcert">
    <antcall target="_createcert">
       <param name="cmd" value="-selfsigned -entity/ca -subject &quot;CN=Mybank Client Root CA1, C=US&quot; -validity/start 2010-07-10T10:00:00 -validity/end 2030-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${clientroot}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 4096 -sigalg RSA_SHA512 -serial 1"/>
    </antcall>
    <antcall target="_getroot">
       <param name="rootfile" value="${clientroot}"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value="-ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore ${clientroot}${keyfilext} -entity/ee -subject &quot;CN=Luke Skywalker, serialNumber=95673522&quot; -validity/start 2012-07-10T10:00:00 -validity/end 2025-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${clientkey_rsa}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 2048 -sigalg RSA_SHA512"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value="-ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore ${clientroot}${keyfilext} -entity/ee -subject &quot;CN=Luke Skywalker, serialNumber=95673522&quot; -validity/start 2012-07-10T10:00:00 -validity/end 2025-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${clientkey_ec}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -ecccurve NIST_P_256 -sigalg RSA_SHA512"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value="-ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore ${clientroot}${keyfilext} -entity/ee -subject &quot;CN=Luke Skywalker, serialNumber=95673522&quot; -validity/start 2012-07-10T10:00:00 -validity/end 2025-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${clientkey_ec2}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -ecccurve NIST_P_521 -sigalg RSA_SHA512"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value="-ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore ${clientroot}${keyfilext} -entity/ee -subject &quot;CN=Luke Skywalker, serialNumber=95673522&quot; -validity/start 2012-07-10T10:00:00 -validity/end 2025-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${clientkey_ec_other}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -ecccurve NIST_P_256 -sigalg RSA_SHA512"/>
    </antcall>
  </target>

  <target name="_authencryption">
    <antcall target="_createcert">
       <param name="cmd" value="-selfsigned -entity/ee -subject &quot;CN=Mybank Encryption Key1&quot; -validity/start 2010-07-10T10:00:00 -validity/end 2030-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${encryptionkey_rsa}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 2048 -sigalg RSA_SHA256 -serial 1"/>
    </antcall>
    <antcall target="_getroot">
       <param name="rootfile" value="${encryptionkey_rsa}"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value="-selfsigned -entity/ee -subject &quot;CN=Mybank Encryption Key1&quot; -validity/start 2010-07-10T10:00:00 -validity/end 2030-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${encryptionkey_ec}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -ecccurve NIST_P_256 -sigalg ECDSA_SHA256 -serial 1"/>
    </antcall>
    <antcall target="_getroot">
       <param name="rootfile" value="${encryptionkey_ec}"/>
    </antcall>
  </target>
  
  <target name="createcerts">
    <antcall target="_certpaymentnetwork"/>
    <antcall target="_certmerchants"/>
    <antcall target="_clientcert"/>
    <antcall target="_authencryption"/>
    <delete>
  	  <fileset dir="${key_dir}">
  		<include name="temp*"/>
  	  </fileset>
    </delete>    
  </target>
  
</project>
