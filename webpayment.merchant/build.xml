<project name="Web2Native Bridge Merchant" default="help" basedir=".">

  <!-- set properties for this build -->
  <property name="src.dir" value="src"/>
  <property name="packimage_dir" value="packaged-images"/>
  <property name="class_war_path" value="WEB-INF/classes/org/webpki/w2nb/webpayment/merchant"/>
  
  <property name="appcorename" value="w2nb-merchant"/>
  <property name="application" value="${appcorename}.war"/>
  
  <property name="debug" value="on"/>
  <property environment="env"/>

  <property name="catalina.home" value="${env.CATALINA_HOME}"/>

  <resources id="security_constraint">
<string><![CDATA[
    <security-constraint>
      <web-resource-collection>
        <web-resource-name>The app</web-resource-name>
        <url-pattern>/*</url-pattern>
      </web-resource-collection>
      <user-data-constraint>
        <transport-guarantee>CONFIDENTIAL</transport-guarantee>
      </user-data-constraint>
    </security-constraint>
]]></string>
  </resources>

  <resources id="w2nb_application.xml">
<string><![CDATA[    <!-- Web2 Payment Demo -->
    <module>
        <web>
            <web-uri>${application}</web-uri>
            <context-root>/${appcorename}</context-root>
        </web>
    </module>
</application>]]></string>
  </resources>

  <property name="ejbca-app-xml-mod" refid="w2nb_application.xml"/>

  <condition property="storetype" value="PKCS12" else="JKS">
    <matches pattern=".*\.p12$" string="${keyfilext}"/>
  </condition>

  <target name="help">
      <echo message="tomcat [-Dhttps=0] [-Derr.payment.ca] mobilepki-ejbca localhost-ejbca zip-distribution"/>
  </target>

  <target name="_init" unless="app_path">
    <!-- Set up where application should reside --> 
    <condition property="tomcat_app_root_set">
      <isset property="env.CATALINA_HOME"/>
    </condition>
    <fail message="CATALINA_HOME must be set to environment!" unless="tomcat_app_root_set"/>

    <!-- Set path to application.  -->
    <property name="dist.dir" value="dist"/>
  </target>

  <target name="_build">
    <fixcrlf srcdir="${src.dir}"
       tab="remove"
       tablength="4"
       eol="lf"
       eof="remove"
       includes="**/*.java"/>
    <copy file="web.xml" todir="${temp.dir}"/>
    <javac debug="${debug}"
           source="${javaversion}"
           target="${javaversion}"
           srcdir="${src.dir}:${compile.common.src.dir}"
           destdir="${temp.dir}"
           classpath="${compile.classpath}"
           includeAntRuntime="false"/>
    <property name="encryptionkey" value="${encryptionkey_rsa}"/>
    <property name="clientkey" value="${clientkey_rsa}"/>
    <property name="bouncycastle.first" value="true"/>
    <property name="webpki.jars" value="${library.dir}"/>
    <replace file="${temp.dir}/web.xml">
      <replacefilter token="@security-constraints@" value="${security.constraints}"/>
      <replacefilter token="@bank-port-map@" value="${bank.port.map}"/>
      <replacefilter token="@key-password@" value="${keypassword}"/>
	  <replacefilter token="@merchant-eecert@" value="${merchantkey}${keyfilext}"/>
      <replacefilter token="@payment-root@" value="${payment.var.root}.cer"/>
	</replace>
    <war destfile="${dist.dir}/${application}" webxml="${temp.dir}/web.xml">
      <classes dir="${temp.dir}">
         <exclude name="web.xml"/>
      </classes>
      <lib dir="${zip.webpki.lib.dir}">
         <include name="webpki.org-libext*.jar"/>
      </lib>
       <lib dir="${zip.bc.lib.dir}">
         <include name="bcprov-*.jar"/>
       </lib>
      <lib dir="${zip.util.lib.dir}">
         <include name="webpki.org-webutil*.jar"/>
      </lib>
      <zipfileset dir="${zip.key.dir}" prefix="${class_war_path}">
         <include name="${merchantkey}${keyfilext}"/>
         <include name="${payment.var.root}.cer"/>
       </zipfileset>
      <fileset dir="web"/>
    </war>
  </target>

  <target name="tomcat" depends="_init">
     <property file="../webpayment.resources/common.properties"/>
     <property name="temp.dir" value=".tmp"/>
     <delete dir="${temp.dir}"/>
     <property name="local_sc" refid="security_constraint"/>
     <condition property="security_constraints" value="${local_sc}" else="">
       <isset property="https"/>
     </condition>
     <condition property="payment_root" value="${merchantroot}" else="${paymentroot}">
       <isset property="err.payment.root"/>
     </condition>
     <path id="tomcat.compile.classpath">
       <fileset dir="${common.lib.dir}">
         <include name="*.jar"/>
       </fileset>
       <fileset dir="${utils.lib.dir}">
         <include name="*.jar"/>
       </fileset>
       <fileset dir="${reference.lib.dir}">
         <include name="*.jar"/>
       </fileset>
     </path>
     <antcall target="_build">
       <param name="security.constraints" value="${security_constraints}"/>
       <param name="card.font" value="Arial Unicode MS"/>
       <param name="javaversion" value="1.7"/>

       <param name="compile.common.src.dir" value="${common.src.dir}"/>
       
       <param name="compile.classpath" refid="tomcat.compile.classpath"/>
       
       <param name="zip.webpki.lib.dir" value="${common.lib.dir}"/>
       <param name="zip.bc.lib.dir" value="${common.lib.dir}"/>
       <param name="zip.util.lib.dir" value="${utils.lib.dir}"/>
       
       <param name="zip.key.dir" value="${key.dir}"/>
       
       <param name="payment.var.root" value="${payment_root}"/>

       <param name="bank.port.map" value=""/>
     </antcall>
     <copy file="${dist.dir}/${application}" todir="${env.CATALINA_HOME}/webapps" overwrite="true" preservelastmodified="true"/>
  </target>
  
  <!-- mobilepki using EJBCA plugin mode -->
  <target name="mobilepki-ejbca">
     <echo message="Web2Native Bridge &quot;mobilepki.org&quot; Bank Plugin"/>
     <property name="bank_port_map" value="8442"/>
     <property file="common.properties"/>
     <property name="temp.dir" value="${ejbca.tmp.path}"/>
     <property name="dist.dir" value="${ejbca.gen.path}"/>
     <path id="ejbca.compile.classpath">
	    <fileset dir="${plugin.ejbca.ant.custom.enrollment_plugin_directory}/lib.common">
           <include name="*.jar"/>
        </fileset>
        <pathelement path="${ejbca.classpath}"/>
	 </path>
     <antcall target="_build">
       <param name="security.constraints" refid="security_constraint"/>
       <param name="card.font" value="Arial Unicode MS"/>
       <param name="javaversion" value="1.6"/>

       <param name="compile.common.src.dir" value="common.src"/>
       
       <param name="compile.classpath" refid="ejbca.compile.classpath"/>
       
       <param name="zip.webpki.lib.dir" value="empty.lib"/>
       <param name="zip.bc.lib.dir" value="empty.lib"/>
       <param name="zip.util.lib.dir" value="empty.lib"/>
       
       <param name="zip.key.dir" value="keys"/>

       <param name="payment.var.root" value="${paymentroot}"/>

       <param name="bank.port.map" value="${bank_port_map}"/>
     </antcall>
     <!-- Update application.xml -->
     <replace file="${ejbca.app.xml}" value="${ejbca-app-xml-mod}">
	    <replacetoken><![CDATA[</application>]]></replacetoken>
     </replace>
  </target>
  
  <target name="localhost-ejbca">
     <echo message="Web2Native Bridge &quot;localhost&quot; Bank Plugin"/>
     <property name="bank_port_map" value=""/>
     <antcall target="mobilepki-ejbca"/>
  </target>
  
  <target name="_unzipit" if="uu">
    <delete dir="${dd}/${appcorename}"/>
    <unzip src="${dd}/${appcorename}.zip" dest="${dd}"/>
  </target>
  
  <target name="zip-distribution">
    <fail unless="dd" message="-&#10;
***************************************************************&#10;
 You must define a distribution directory using the -D option:&#10;
 ant zip-distribution -Ddd=the_path_to_the_directory.&#10;
 Optionally you can specify -Duu=0 which deletes ${appcorename}&#10;
 and replaces the directory with the unzipped content&#10;
***************************************************************&#10;"/>
	<echo message="Producing ${appcorename} .zip and .zip.SHA1 files..."/> 
    <property file="../webpayment.resources/common.properties"/>
	<delete file="${dd}/${appcorename}.zip" failonerror="false"/>
    <zip destfile="${dd}/${appcorename}.zip">
      <zipfileset dir="." prefix="${appcorename}">
       	<exclude name="/**/.*"/>
        <exclude name="/.tmp/**"/>
       	<exclude name="**/.settings/**"/>
       	<exclude name="**/bin/**"/>
       	<exclude name="dist/**"/>
      </zipfileset>
      <zipfileset dir="${common.src.dir}" prefix="${appcorename}/common.src"/>
      <zipfileset dir="${key.dir}" prefix="${appcorename}/keys"/>
      <zipfileset file="../webpayment.resources/common.properties" prefix="${appcorename}"/>
    </zip>
    <checksum file="${dd}/${appcorename}.zip" fileext=".SHA1" algorithm="sha1" forceOverwrite="yes"/>
    <antcall target="_unzipit"/>
  </target>
   
</project>
